from urllib.parse import urljoin

from ..app_config.config_service import ConfService


def build_openid_configuration(confsvc: ConfService):
    return {
        "version": "3.0",
        "token_endpoint_auth_methods_supported": ["public"],
        "claims_parameter_supported": True,
        "request_parameter_supported": True,
        "request_uri_parameter_supported": True,
        "require_request_uri_registration": False,
        "grant_types_supported": [
            "authorization_code",
            "implicit",
            "urn:ietf:params:oauth:grant-type:jwt-bearer",
            "refresh_token",
        ],
        "jwks_uri": urljoin(confsvc.service_url, "/static/jwks.json"),
        "scopes_supported": ["openid"],
        "response_types_supported": ["code"],
        "response_modes_supported": ["query", "fragment", "form_post"],
        "subject_types_supported": ["public", "pairwise"],
        "id_token_signing_alg_values_supported": [
            "RS256",
            "RS384",
            "RS512",
            "ES256",
            "ES384",
            "ES512",
            "PS256",
            "PS384",
            "PS512",
            "HS256",
            "HS384",
            "HS512",
        ],
        "userinfo_signing_alg_values_supported": [
            "RS256",
            "RS384",
            "RS512",
            "ES256",
            "ES384",
            "ES512",
            "PS256",
            "PS384",
            "PS512",
            "HS256",
            "HS384",
            "HS512",
        ],
        "request_object_signing_alg_values_supported": [
            "RS256",
            "RS384",
            "RS512",
            "ES256",
            "ES384",
            "ES512",
            "HS256",
            "HS384",
            "HS512",
            "PS256",
            "PS384",
            "PS512",
        ],
        "frontchannel_logout_supported": True,
        "frontchannel_logout_session_required": True,
        "backchannel_logout_supported": True,
        "backchannel_logout_session_required": True,
        "code_challenge_methods_supported": ["S256"],
        "issuer": confsvc.service_url,
        "registration_endpoint": urljoin(confsvc.service_url, "/registration"),
        "introspection_endpoint": urljoin(confsvc.service_url, "/introspection"),
        "authorization_endpoint": urljoin(confsvc.service_url, "/authorizationV3"),
        "token_endpoint": urljoin(confsvc.service_url, "/token"),
        "userinfo_endpoint": urljoin(confsvc.service_url, "/userinfo"),
        "end_session_endpoint": urljoin(confsvc.service_url, "/session"),
        "pushed_authorization_request_endpoint": urljoin(
            confsvc.service_url, "/pushed_authorizationv2"
        ),
        "credential_endpoint": urljoin(confsvc.service_url, "/credential"),
    }
